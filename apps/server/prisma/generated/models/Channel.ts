
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Channel` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Channel
 * 
 */
export type ChannelModel = runtime.Types.Result.DefaultSelection<Prisma.$ChannelPayload>

export type AggregateChannel = {
  _count: ChannelCountAggregateOutputType | null
  _avg: ChannelAvgAggregateOutputType | null
  _sum: ChannelSumAggregateOutputType | null
  _min: ChannelMinAggregateOutputType | null
  _max: ChannelMaxAggregateOutputType | null
}

export type ChannelAvgAggregateOutputType = {
  number: number | null
  iconWidth: number | null
  iconDuration: number | null
  guideMinimumDurationSeconds: number | null
  onDemandModulo: number | null
  filterYearStart: number | null
  filterYearEnd: number | null
  blockShuffleSize: number | null
}

export type ChannelSumAggregateOutputType = {
  number: number | null
  iconWidth: number | null
  iconDuration: number | null
  guideMinimumDurationSeconds: number | null
  onDemandModulo: number | null
  filterYearStart: number | null
  filterYearEnd: number | null
  blockShuffleSize: number | null
}

export type ChannelMinAggregateOutputType = {
  id: string | null
  number: number | null
  name: string | null
  icon: string | null
  stealth: boolean | null
  groupTitle: string | null
  startTime: string | null
  iconWidth: number | null
  iconDuration: number | null
  iconPosition: string | null
  guideFlexPlaceholder: string | null
  guideMinimumDurationSeconds: number | null
  isOnDemand: boolean | null
  onDemandModulo: number | null
  episodeMemoryEnabled: boolean | null
  autoFilterEnabled: boolean | null
  filterGenres: string | null
  filterActors: string | null
  filterDirectors: string | null
  filterStudios: string | null
  filterCollections: string | null
  filterYearStart: number | null
  filterYearEnd: number | null
  filterRating: string | null
  filterType: string | null
  lastAutoScanAt: Date | null
  defaultEpisodeOrder: string | null
  respectEpisodeOrder: boolean | null
  blockShuffle: boolean | null
  blockShuffleSize: number | null
  autoSortMethod: string | null
  franchiseAutomation: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ChannelMaxAggregateOutputType = {
  id: string | null
  number: number | null
  name: string | null
  icon: string | null
  stealth: boolean | null
  groupTitle: string | null
  startTime: string | null
  iconWidth: number | null
  iconDuration: number | null
  iconPosition: string | null
  guideFlexPlaceholder: string | null
  guideMinimumDurationSeconds: number | null
  isOnDemand: boolean | null
  onDemandModulo: number | null
  episodeMemoryEnabled: boolean | null
  autoFilterEnabled: boolean | null
  filterGenres: string | null
  filterActors: string | null
  filterDirectors: string | null
  filterStudios: string | null
  filterCollections: string | null
  filterYearStart: number | null
  filterYearEnd: number | null
  filterRating: string | null
  filterType: string | null
  lastAutoScanAt: Date | null
  defaultEpisodeOrder: string | null
  respectEpisodeOrder: boolean | null
  blockShuffle: boolean | null
  blockShuffleSize: number | null
  autoSortMethod: string | null
  franchiseAutomation: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ChannelCountAggregateOutputType = {
  id: number
  number: number
  name: number
  icon: number
  stealth: number
  groupTitle: number
  startTime: number
  iconWidth: number
  iconDuration: number
  iconPosition: number
  guideFlexPlaceholder: number
  guideMinimumDurationSeconds: number
  isOnDemand: number
  onDemandModulo: number
  episodeMemoryEnabled: number
  autoFilterEnabled: number
  filterGenres: number
  filterActors: number
  filterDirectors: number
  filterStudios: number
  filterCollections: number
  filterYearStart: number
  filterYearEnd: number
  filterRating: number
  filterType: number
  lastAutoScanAt: number
  defaultEpisodeOrder: number
  respectEpisodeOrder: number
  blockShuffle: number
  blockShuffleSize: number
  autoSortMethod: number
  franchiseAutomation: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ChannelAvgAggregateInputType = {
  number?: true
  iconWidth?: true
  iconDuration?: true
  guideMinimumDurationSeconds?: true
  onDemandModulo?: true
  filterYearStart?: true
  filterYearEnd?: true
  blockShuffleSize?: true
}

export type ChannelSumAggregateInputType = {
  number?: true
  iconWidth?: true
  iconDuration?: true
  guideMinimumDurationSeconds?: true
  onDemandModulo?: true
  filterYearStart?: true
  filterYearEnd?: true
  blockShuffleSize?: true
}

export type ChannelMinAggregateInputType = {
  id?: true
  number?: true
  name?: true
  icon?: true
  stealth?: true
  groupTitle?: true
  startTime?: true
  iconWidth?: true
  iconDuration?: true
  iconPosition?: true
  guideFlexPlaceholder?: true
  guideMinimumDurationSeconds?: true
  isOnDemand?: true
  onDemandModulo?: true
  episodeMemoryEnabled?: true
  autoFilterEnabled?: true
  filterGenres?: true
  filterActors?: true
  filterDirectors?: true
  filterStudios?: true
  filterCollections?: true
  filterYearStart?: true
  filterYearEnd?: true
  filterRating?: true
  filterType?: true
  lastAutoScanAt?: true
  defaultEpisodeOrder?: true
  respectEpisodeOrder?: true
  blockShuffle?: true
  blockShuffleSize?: true
  autoSortMethod?: true
  franchiseAutomation?: true
  createdAt?: true
  updatedAt?: true
}

export type ChannelMaxAggregateInputType = {
  id?: true
  number?: true
  name?: true
  icon?: true
  stealth?: true
  groupTitle?: true
  startTime?: true
  iconWidth?: true
  iconDuration?: true
  iconPosition?: true
  guideFlexPlaceholder?: true
  guideMinimumDurationSeconds?: true
  isOnDemand?: true
  onDemandModulo?: true
  episodeMemoryEnabled?: true
  autoFilterEnabled?: true
  filterGenres?: true
  filterActors?: true
  filterDirectors?: true
  filterStudios?: true
  filterCollections?: true
  filterYearStart?: true
  filterYearEnd?: true
  filterRating?: true
  filterType?: true
  lastAutoScanAt?: true
  defaultEpisodeOrder?: true
  respectEpisodeOrder?: true
  blockShuffle?: true
  blockShuffleSize?: true
  autoSortMethod?: true
  franchiseAutomation?: true
  createdAt?: true
  updatedAt?: true
}

export type ChannelCountAggregateInputType = {
  id?: true
  number?: true
  name?: true
  icon?: true
  stealth?: true
  groupTitle?: true
  startTime?: true
  iconWidth?: true
  iconDuration?: true
  iconPosition?: true
  guideFlexPlaceholder?: true
  guideMinimumDurationSeconds?: true
  isOnDemand?: true
  onDemandModulo?: true
  episodeMemoryEnabled?: true
  autoFilterEnabled?: true
  filterGenres?: true
  filterActors?: true
  filterDirectors?: true
  filterStudios?: true
  filterCollections?: true
  filterYearStart?: true
  filterYearEnd?: true
  filterRating?: true
  filterType?: true
  lastAutoScanAt?: true
  defaultEpisodeOrder?: true
  respectEpisodeOrder?: true
  blockShuffle?: true
  blockShuffleSize?: true
  autoSortMethod?: true
  franchiseAutomation?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ChannelAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Channel to aggregate.
   */
  where?: Prisma.ChannelWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Channels to fetch.
   */
  orderBy?: Prisma.ChannelOrderByWithRelationInput | Prisma.ChannelOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ChannelWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Channels from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Channels.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Channels
  **/
  _count?: true | ChannelCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ChannelAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ChannelSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ChannelMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ChannelMaxAggregateInputType
}

export type GetChannelAggregateType<T extends ChannelAggregateArgs> = {
      [P in keyof T & keyof AggregateChannel]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateChannel[P]>
    : Prisma.GetScalarType<T[P], AggregateChannel[P]>
}




export type ChannelGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ChannelWhereInput
  orderBy?: Prisma.ChannelOrderByWithAggregationInput | Prisma.ChannelOrderByWithAggregationInput[]
  by: Prisma.ChannelScalarFieldEnum[] | Prisma.ChannelScalarFieldEnum
  having?: Prisma.ChannelScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ChannelCountAggregateInputType | true
  _avg?: ChannelAvgAggregateInputType
  _sum?: ChannelSumAggregateInputType
  _min?: ChannelMinAggregateInputType
  _max?: ChannelMaxAggregateInputType
}

export type ChannelGroupByOutputType = {
  id: string
  number: number
  name: string
  icon: string | null
  stealth: boolean
  groupTitle: string | null
  startTime: string | null
  iconWidth: number
  iconDuration: number
  iconPosition: string
  guideFlexPlaceholder: string
  guideMinimumDurationSeconds: number
  isOnDemand: boolean
  onDemandModulo: number
  episodeMemoryEnabled: boolean
  autoFilterEnabled: boolean
  filterGenres: string | null
  filterActors: string | null
  filterDirectors: string | null
  filterStudios: string | null
  filterCollections: string | null
  filterYearStart: number | null
  filterYearEnd: number | null
  filterRating: string | null
  filterType: string
  lastAutoScanAt: Date | null
  defaultEpisodeOrder: string
  respectEpisodeOrder: boolean
  blockShuffle: boolean
  blockShuffleSize: number
  autoSortMethod: string | null
  franchiseAutomation: boolean
  createdAt: Date
  updatedAt: Date
  _count: ChannelCountAggregateOutputType | null
  _avg: ChannelAvgAggregateOutputType | null
  _sum: ChannelSumAggregateOutputType | null
  _min: ChannelMinAggregateOutputType | null
  _max: ChannelMaxAggregateOutputType | null
}

type GetChannelGroupByPayload<T extends ChannelGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ChannelGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ChannelGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ChannelGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ChannelGroupByOutputType[P]>
      }
    >
  > 



export type ChannelWhereInput = {
  AND?: Prisma.ChannelWhereInput | Prisma.ChannelWhereInput[]
  OR?: Prisma.ChannelWhereInput[]
  NOT?: Prisma.ChannelWhereInput | Prisma.ChannelWhereInput[]
  id?: Prisma.StringFilter<"Channel"> | string
  number?: Prisma.IntFilter<"Channel"> | number
  name?: Prisma.StringFilter<"Channel"> | string
  icon?: Prisma.StringNullableFilter<"Channel"> | string | null
  stealth?: Prisma.BoolFilter<"Channel"> | boolean
  groupTitle?: Prisma.StringNullableFilter<"Channel"> | string | null
  startTime?: Prisma.StringNullableFilter<"Channel"> | string | null
  iconWidth?: Prisma.IntFilter<"Channel"> | number
  iconDuration?: Prisma.IntFilter<"Channel"> | number
  iconPosition?: Prisma.StringFilter<"Channel"> | string
  guideFlexPlaceholder?: Prisma.StringFilter<"Channel"> | string
  guideMinimumDurationSeconds?: Prisma.IntFilter<"Channel"> | number
  isOnDemand?: Prisma.BoolFilter<"Channel"> | boolean
  onDemandModulo?: Prisma.IntFilter<"Channel"> | number
  episodeMemoryEnabled?: Prisma.BoolFilter<"Channel"> | boolean
  autoFilterEnabled?: Prisma.BoolFilter<"Channel"> | boolean
  filterGenres?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterActors?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterDirectors?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterStudios?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterCollections?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterYearStart?: Prisma.IntNullableFilter<"Channel"> | number | null
  filterYearEnd?: Prisma.IntNullableFilter<"Channel"> | number | null
  filterRating?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterType?: Prisma.StringFilter<"Channel"> | string
  lastAutoScanAt?: Prisma.DateTimeNullableFilter<"Channel"> | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFilter<"Channel"> | string
  respectEpisodeOrder?: Prisma.BoolFilter<"Channel"> | boolean
  blockShuffle?: Prisma.BoolFilter<"Channel"> | boolean
  blockShuffleSize?: Prisma.IntFilter<"Channel"> | number
  autoSortMethod?: Prisma.StringNullableFilter<"Channel"> | string | null
  franchiseAutomation?: Prisma.BoolFilter<"Channel"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Channel"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Channel"> | Date | string
  programs?: Prisma.ProgramListRelationFilter
  channelShows?: Prisma.ChannelShowListRelationFilter
  channelMovies?: Prisma.ChannelMovieListRelationFilter
}

export type ChannelOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  number?: Prisma.SortOrder
  name?: Prisma.SortOrder
  icon?: Prisma.SortOrderInput | Prisma.SortOrder
  stealth?: Prisma.SortOrder
  groupTitle?: Prisma.SortOrderInput | Prisma.SortOrder
  startTime?: Prisma.SortOrderInput | Prisma.SortOrder
  iconWidth?: Prisma.SortOrder
  iconDuration?: Prisma.SortOrder
  iconPosition?: Prisma.SortOrder
  guideFlexPlaceholder?: Prisma.SortOrder
  guideMinimumDurationSeconds?: Prisma.SortOrder
  isOnDemand?: Prisma.SortOrder
  onDemandModulo?: Prisma.SortOrder
  episodeMemoryEnabled?: Prisma.SortOrder
  autoFilterEnabled?: Prisma.SortOrder
  filterGenres?: Prisma.SortOrderInput | Prisma.SortOrder
  filterActors?: Prisma.SortOrderInput | Prisma.SortOrder
  filterDirectors?: Prisma.SortOrderInput | Prisma.SortOrder
  filterStudios?: Prisma.SortOrderInput | Prisma.SortOrder
  filterCollections?: Prisma.SortOrderInput | Prisma.SortOrder
  filterYearStart?: Prisma.SortOrderInput | Prisma.SortOrder
  filterYearEnd?: Prisma.SortOrderInput | Prisma.SortOrder
  filterRating?: Prisma.SortOrderInput | Prisma.SortOrder
  filterType?: Prisma.SortOrder
  lastAutoScanAt?: Prisma.SortOrderInput | Prisma.SortOrder
  defaultEpisodeOrder?: Prisma.SortOrder
  respectEpisodeOrder?: Prisma.SortOrder
  blockShuffle?: Prisma.SortOrder
  blockShuffleSize?: Prisma.SortOrder
  autoSortMethod?: Prisma.SortOrderInput | Prisma.SortOrder
  franchiseAutomation?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  programs?: Prisma.ProgramOrderByRelationAggregateInput
  channelShows?: Prisma.ChannelShowOrderByRelationAggregateInput
  channelMovies?: Prisma.ChannelMovieOrderByRelationAggregateInput
}

export type ChannelWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  number?: number
  AND?: Prisma.ChannelWhereInput | Prisma.ChannelWhereInput[]
  OR?: Prisma.ChannelWhereInput[]
  NOT?: Prisma.ChannelWhereInput | Prisma.ChannelWhereInput[]
  name?: Prisma.StringFilter<"Channel"> | string
  icon?: Prisma.StringNullableFilter<"Channel"> | string | null
  stealth?: Prisma.BoolFilter<"Channel"> | boolean
  groupTitle?: Prisma.StringNullableFilter<"Channel"> | string | null
  startTime?: Prisma.StringNullableFilter<"Channel"> | string | null
  iconWidth?: Prisma.IntFilter<"Channel"> | number
  iconDuration?: Prisma.IntFilter<"Channel"> | number
  iconPosition?: Prisma.StringFilter<"Channel"> | string
  guideFlexPlaceholder?: Prisma.StringFilter<"Channel"> | string
  guideMinimumDurationSeconds?: Prisma.IntFilter<"Channel"> | number
  isOnDemand?: Prisma.BoolFilter<"Channel"> | boolean
  onDemandModulo?: Prisma.IntFilter<"Channel"> | number
  episodeMemoryEnabled?: Prisma.BoolFilter<"Channel"> | boolean
  autoFilterEnabled?: Prisma.BoolFilter<"Channel"> | boolean
  filterGenres?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterActors?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterDirectors?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterStudios?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterCollections?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterYearStart?: Prisma.IntNullableFilter<"Channel"> | number | null
  filterYearEnd?: Prisma.IntNullableFilter<"Channel"> | number | null
  filterRating?: Prisma.StringNullableFilter<"Channel"> | string | null
  filterType?: Prisma.StringFilter<"Channel"> | string
  lastAutoScanAt?: Prisma.DateTimeNullableFilter<"Channel"> | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFilter<"Channel"> | string
  respectEpisodeOrder?: Prisma.BoolFilter<"Channel"> | boolean
  blockShuffle?: Prisma.BoolFilter<"Channel"> | boolean
  blockShuffleSize?: Prisma.IntFilter<"Channel"> | number
  autoSortMethod?: Prisma.StringNullableFilter<"Channel"> | string | null
  franchiseAutomation?: Prisma.BoolFilter<"Channel"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Channel"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Channel"> | Date | string
  programs?: Prisma.ProgramListRelationFilter
  channelShows?: Prisma.ChannelShowListRelationFilter
  channelMovies?: Prisma.ChannelMovieListRelationFilter
}, "id" | "number">

export type ChannelOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  number?: Prisma.SortOrder
  name?: Prisma.SortOrder
  icon?: Prisma.SortOrderInput | Prisma.SortOrder
  stealth?: Prisma.SortOrder
  groupTitle?: Prisma.SortOrderInput | Prisma.SortOrder
  startTime?: Prisma.SortOrderInput | Prisma.SortOrder
  iconWidth?: Prisma.SortOrder
  iconDuration?: Prisma.SortOrder
  iconPosition?: Prisma.SortOrder
  guideFlexPlaceholder?: Prisma.SortOrder
  guideMinimumDurationSeconds?: Prisma.SortOrder
  isOnDemand?: Prisma.SortOrder
  onDemandModulo?: Prisma.SortOrder
  episodeMemoryEnabled?: Prisma.SortOrder
  autoFilterEnabled?: Prisma.SortOrder
  filterGenres?: Prisma.SortOrderInput | Prisma.SortOrder
  filterActors?: Prisma.SortOrderInput | Prisma.SortOrder
  filterDirectors?: Prisma.SortOrderInput | Prisma.SortOrder
  filterStudios?: Prisma.SortOrderInput | Prisma.SortOrder
  filterCollections?: Prisma.SortOrderInput | Prisma.SortOrder
  filterYearStart?: Prisma.SortOrderInput | Prisma.SortOrder
  filterYearEnd?: Prisma.SortOrderInput | Prisma.SortOrder
  filterRating?: Prisma.SortOrderInput | Prisma.SortOrder
  filterType?: Prisma.SortOrder
  lastAutoScanAt?: Prisma.SortOrderInput | Prisma.SortOrder
  defaultEpisodeOrder?: Prisma.SortOrder
  respectEpisodeOrder?: Prisma.SortOrder
  blockShuffle?: Prisma.SortOrder
  blockShuffleSize?: Prisma.SortOrder
  autoSortMethod?: Prisma.SortOrderInput | Prisma.SortOrder
  franchiseAutomation?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ChannelCountOrderByAggregateInput
  _avg?: Prisma.ChannelAvgOrderByAggregateInput
  _max?: Prisma.ChannelMaxOrderByAggregateInput
  _min?: Prisma.ChannelMinOrderByAggregateInput
  _sum?: Prisma.ChannelSumOrderByAggregateInput
}

export type ChannelScalarWhereWithAggregatesInput = {
  AND?: Prisma.ChannelScalarWhereWithAggregatesInput | Prisma.ChannelScalarWhereWithAggregatesInput[]
  OR?: Prisma.ChannelScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ChannelScalarWhereWithAggregatesInput | Prisma.ChannelScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Channel"> | string
  number?: Prisma.IntWithAggregatesFilter<"Channel"> | number
  name?: Prisma.StringWithAggregatesFilter<"Channel"> | string
  icon?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  stealth?: Prisma.BoolWithAggregatesFilter<"Channel"> | boolean
  groupTitle?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  startTime?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  iconWidth?: Prisma.IntWithAggregatesFilter<"Channel"> | number
  iconDuration?: Prisma.IntWithAggregatesFilter<"Channel"> | number
  iconPosition?: Prisma.StringWithAggregatesFilter<"Channel"> | string
  guideFlexPlaceholder?: Prisma.StringWithAggregatesFilter<"Channel"> | string
  guideMinimumDurationSeconds?: Prisma.IntWithAggregatesFilter<"Channel"> | number
  isOnDemand?: Prisma.BoolWithAggregatesFilter<"Channel"> | boolean
  onDemandModulo?: Prisma.IntWithAggregatesFilter<"Channel"> | number
  episodeMemoryEnabled?: Prisma.BoolWithAggregatesFilter<"Channel"> | boolean
  autoFilterEnabled?: Prisma.BoolWithAggregatesFilter<"Channel"> | boolean
  filterGenres?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  filterActors?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  filterDirectors?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  filterStudios?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  filterCollections?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  filterYearStart?: Prisma.IntNullableWithAggregatesFilter<"Channel"> | number | null
  filterYearEnd?: Prisma.IntNullableWithAggregatesFilter<"Channel"> | number | null
  filterRating?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  filterType?: Prisma.StringWithAggregatesFilter<"Channel"> | string
  lastAutoScanAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Channel"> | Date | string | null
  defaultEpisodeOrder?: Prisma.StringWithAggregatesFilter<"Channel"> | string
  respectEpisodeOrder?: Prisma.BoolWithAggregatesFilter<"Channel"> | boolean
  blockShuffle?: Prisma.BoolWithAggregatesFilter<"Channel"> | boolean
  blockShuffleSize?: Prisma.IntWithAggregatesFilter<"Channel"> | number
  autoSortMethod?: Prisma.StringNullableWithAggregatesFilter<"Channel"> | string | null
  franchiseAutomation?: Prisma.BoolWithAggregatesFilter<"Channel"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Channel"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Channel"> | Date | string
}

export type ChannelCreateInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  programs?: Prisma.ProgramCreateNestedManyWithoutChannelInput
  channelShows?: Prisma.ChannelShowCreateNestedManyWithoutChannelInput
  channelMovies?: Prisma.ChannelMovieCreateNestedManyWithoutChannelInput
}

export type ChannelUncheckedCreateInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutChannelInput
  channelShows?: Prisma.ChannelShowUncheckedCreateNestedManyWithoutChannelInput
  channelMovies?: Prisma.ChannelMovieUncheckedCreateNestedManyWithoutChannelInput
}

export type ChannelUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programs?: Prisma.ProgramUpdateManyWithoutChannelNestedInput
  channelShows?: Prisma.ChannelShowUpdateManyWithoutChannelNestedInput
  channelMovies?: Prisma.ChannelMovieUpdateManyWithoutChannelNestedInput
}

export type ChannelUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutChannelNestedInput
  channelShows?: Prisma.ChannelShowUncheckedUpdateManyWithoutChannelNestedInput
  channelMovies?: Prisma.ChannelMovieUncheckedUpdateManyWithoutChannelNestedInput
}

export type ChannelCreateManyInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ChannelUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ChannelUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ChannelCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  number?: Prisma.SortOrder
  name?: Prisma.SortOrder
  icon?: Prisma.SortOrder
  stealth?: Prisma.SortOrder
  groupTitle?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  iconWidth?: Prisma.SortOrder
  iconDuration?: Prisma.SortOrder
  iconPosition?: Prisma.SortOrder
  guideFlexPlaceholder?: Prisma.SortOrder
  guideMinimumDurationSeconds?: Prisma.SortOrder
  isOnDemand?: Prisma.SortOrder
  onDemandModulo?: Prisma.SortOrder
  episodeMemoryEnabled?: Prisma.SortOrder
  autoFilterEnabled?: Prisma.SortOrder
  filterGenres?: Prisma.SortOrder
  filterActors?: Prisma.SortOrder
  filterDirectors?: Prisma.SortOrder
  filterStudios?: Prisma.SortOrder
  filterCollections?: Prisma.SortOrder
  filterYearStart?: Prisma.SortOrder
  filterYearEnd?: Prisma.SortOrder
  filterRating?: Prisma.SortOrder
  filterType?: Prisma.SortOrder
  lastAutoScanAt?: Prisma.SortOrder
  defaultEpisodeOrder?: Prisma.SortOrder
  respectEpisodeOrder?: Prisma.SortOrder
  blockShuffle?: Prisma.SortOrder
  blockShuffleSize?: Prisma.SortOrder
  autoSortMethod?: Prisma.SortOrder
  franchiseAutomation?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ChannelAvgOrderByAggregateInput = {
  number?: Prisma.SortOrder
  iconWidth?: Prisma.SortOrder
  iconDuration?: Prisma.SortOrder
  guideMinimumDurationSeconds?: Prisma.SortOrder
  onDemandModulo?: Prisma.SortOrder
  filterYearStart?: Prisma.SortOrder
  filterYearEnd?: Prisma.SortOrder
  blockShuffleSize?: Prisma.SortOrder
}

export type ChannelMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  number?: Prisma.SortOrder
  name?: Prisma.SortOrder
  icon?: Prisma.SortOrder
  stealth?: Prisma.SortOrder
  groupTitle?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  iconWidth?: Prisma.SortOrder
  iconDuration?: Prisma.SortOrder
  iconPosition?: Prisma.SortOrder
  guideFlexPlaceholder?: Prisma.SortOrder
  guideMinimumDurationSeconds?: Prisma.SortOrder
  isOnDemand?: Prisma.SortOrder
  onDemandModulo?: Prisma.SortOrder
  episodeMemoryEnabled?: Prisma.SortOrder
  autoFilterEnabled?: Prisma.SortOrder
  filterGenres?: Prisma.SortOrder
  filterActors?: Prisma.SortOrder
  filterDirectors?: Prisma.SortOrder
  filterStudios?: Prisma.SortOrder
  filterCollections?: Prisma.SortOrder
  filterYearStart?: Prisma.SortOrder
  filterYearEnd?: Prisma.SortOrder
  filterRating?: Prisma.SortOrder
  filterType?: Prisma.SortOrder
  lastAutoScanAt?: Prisma.SortOrder
  defaultEpisodeOrder?: Prisma.SortOrder
  respectEpisodeOrder?: Prisma.SortOrder
  blockShuffle?: Prisma.SortOrder
  blockShuffleSize?: Prisma.SortOrder
  autoSortMethod?: Prisma.SortOrder
  franchiseAutomation?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ChannelMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  number?: Prisma.SortOrder
  name?: Prisma.SortOrder
  icon?: Prisma.SortOrder
  stealth?: Prisma.SortOrder
  groupTitle?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  iconWidth?: Prisma.SortOrder
  iconDuration?: Prisma.SortOrder
  iconPosition?: Prisma.SortOrder
  guideFlexPlaceholder?: Prisma.SortOrder
  guideMinimumDurationSeconds?: Prisma.SortOrder
  isOnDemand?: Prisma.SortOrder
  onDemandModulo?: Prisma.SortOrder
  episodeMemoryEnabled?: Prisma.SortOrder
  autoFilterEnabled?: Prisma.SortOrder
  filterGenres?: Prisma.SortOrder
  filterActors?: Prisma.SortOrder
  filterDirectors?: Prisma.SortOrder
  filterStudios?: Prisma.SortOrder
  filterCollections?: Prisma.SortOrder
  filterYearStart?: Prisma.SortOrder
  filterYearEnd?: Prisma.SortOrder
  filterRating?: Prisma.SortOrder
  filterType?: Prisma.SortOrder
  lastAutoScanAt?: Prisma.SortOrder
  defaultEpisodeOrder?: Prisma.SortOrder
  respectEpisodeOrder?: Prisma.SortOrder
  blockShuffle?: Prisma.SortOrder
  blockShuffleSize?: Prisma.SortOrder
  autoSortMethod?: Prisma.SortOrder
  franchiseAutomation?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ChannelSumOrderByAggregateInput = {
  number?: Prisma.SortOrder
  iconWidth?: Prisma.SortOrder
  iconDuration?: Prisma.SortOrder
  guideMinimumDurationSeconds?: Prisma.SortOrder
  onDemandModulo?: Prisma.SortOrder
  filterYearStart?: Prisma.SortOrder
  filterYearEnd?: Prisma.SortOrder
  blockShuffleSize?: Prisma.SortOrder
}

export type ChannelScalarRelationFilter = {
  is?: Prisma.ChannelWhereInput
  isNot?: Prisma.ChannelWhereInput
}

export type ChannelCreateNestedOneWithoutProgramsInput = {
  create?: Prisma.XOR<Prisma.ChannelCreateWithoutProgramsInput, Prisma.ChannelUncheckedCreateWithoutProgramsInput>
  connectOrCreate?: Prisma.ChannelCreateOrConnectWithoutProgramsInput
  connect?: Prisma.ChannelWhereUniqueInput
}

export type ChannelUpdateOneRequiredWithoutProgramsNestedInput = {
  create?: Prisma.XOR<Prisma.ChannelCreateWithoutProgramsInput, Prisma.ChannelUncheckedCreateWithoutProgramsInput>
  connectOrCreate?: Prisma.ChannelCreateOrConnectWithoutProgramsInput
  upsert?: Prisma.ChannelUpsertWithoutProgramsInput
  connect?: Prisma.ChannelWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ChannelUpdateToOneWithWhereWithoutProgramsInput, Prisma.ChannelUpdateWithoutProgramsInput>, Prisma.ChannelUncheckedUpdateWithoutProgramsInput>
}

export type ChannelCreateNestedOneWithoutChannelShowsInput = {
  create?: Prisma.XOR<Prisma.ChannelCreateWithoutChannelShowsInput, Prisma.ChannelUncheckedCreateWithoutChannelShowsInput>
  connectOrCreate?: Prisma.ChannelCreateOrConnectWithoutChannelShowsInput
  connect?: Prisma.ChannelWhereUniqueInput
}

export type ChannelUpdateOneRequiredWithoutChannelShowsNestedInput = {
  create?: Prisma.XOR<Prisma.ChannelCreateWithoutChannelShowsInput, Prisma.ChannelUncheckedCreateWithoutChannelShowsInput>
  connectOrCreate?: Prisma.ChannelCreateOrConnectWithoutChannelShowsInput
  upsert?: Prisma.ChannelUpsertWithoutChannelShowsInput
  connect?: Prisma.ChannelWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ChannelUpdateToOneWithWhereWithoutChannelShowsInput, Prisma.ChannelUpdateWithoutChannelShowsInput>, Prisma.ChannelUncheckedUpdateWithoutChannelShowsInput>
}

export type ChannelCreateNestedOneWithoutChannelMoviesInput = {
  create?: Prisma.XOR<Prisma.ChannelCreateWithoutChannelMoviesInput, Prisma.ChannelUncheckedCreateWithoutChannelMoviesInput>
  connectOrCreate?: Prisma.ChannelCreateOrConnectWithoutChannelMoviesInput
  connect?: Prisma.ChannelWhereUniqueInput
}

export type ChannelUpdateOneRequiredWithoutChannelMoviesNestedInput = {
  create?: Prisma.XOR<Prisma.ChannelCreateWithoutChannelMoviesInput, Prisma.ChannelUncheckedCreateWithoutChannelMoviesInput>
  connectOrCreate?: Prisma.ChannelCreateOrConnectWithoutChannelMoviesInput
  upsert?: Prisma.ChannelUpsertWithoutChannelMoviesInput
  connect?: Prisma.ChannelWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ChannelUpdateToOneWithWhereWithoutChannelMoviesInput, Prisma.ChannelUpdateWithoutChannelMoviesInput>, Prisma.ChannelUncheckedUpdateWithoutChannelMoviesInput>
}

export type ChannelCreateWithoutProgramsInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  channelShows?: Prisma.ChannelShowCreateNestedManyWithoutChannelInput
  channelMovies?: Prisma.ChannelMovieCreateNestedManyWithoutChannelInput
}

export type ChannelUncheckedCreateWithoutProgramsInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  channelShows?: Prisma.ChannelShowUncheckedCreateNestedManyWithoutChannelInput
  channelMovies?: Prisma.ChannelMovieUncheckedCreateNestedManyWithoutChannelInput
}

export type ChannelCreateOrConnectWithoutProgramsInput = {
  where: Prisma.ChannelWhereUniqueInput
  create: Prisma.XOR<Prisma.ChannelCreateWithoutProgramsInput, Prisma.ChannelUncheckedCreateWithoutProgramsInput>
}

export type ChannelUpsertWithoutProgramsInput = {
  update: Prisma.XOR<Prisma.ChannelUpdateWithoutProgramsInput, Prisma.ChannelUncheckedUpdateWithoutProgramsInput>
  create: Prisma.XOR<Prisma.ChannelCreateWithoutProgramsInput, Prisma.ChannelUncheckedCreateWithoutProgramsInput>
  where?: Prisma.ChannelWhereInput
}

export type ChannelUpdateToOneWithWhereWithoutProgramsInput = {
  where?: Prisma.ChannelWhereInput
  data: Prisma.XOR<Prisma.ChannelUpdateWithoutProgramsInput, Prisma.ChannelUncheckedUpdateWithoutProgramsInput>
}

export type ChannelUpdateWithoutProgramsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channelShows?: Prisma.ChannelShowUpdateManyWithoutChannelNestedInput
  channelMovies?: Prisma.ChannelMovieUpdateManyWithoutChannelNestedInput
}

export type ChannelUncheckedUpdateWithoutProgramsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  channelShows?: Prisma.ChannelShowUncheckedUpdateManyWithoutChannelNestedInput
  channelMovies?: Prisma.ChannelMovieUncheckedUpdateManyWithoutChannelNestedInput
}

export type ChannelCreateWithoutChannelShowsInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  programs?: Prisma.ProgramCreateNestedManyWithoutChannelInput
  channelMovies?: Prisma.ChannelMovieCreateNestedManyWithoutChannelInput
}

export type ChannelUncheckedCreateWithoutChannelShowsInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutChannelInput
  channelMovies?: Prisma.ChannelMovieUncheckedCreateNestedManyWithoutChannelInput
}

export type ChannelCreateOrConnectWithoutChannelShowsInput = {
  where: Prisma.ChannelWhereUniqueInput
  create: Prisma.XOR<Prisma.ChannelCreateWithoutChannelShowsInput, Prisma.ChannelUncheckedCreateWithoutChannelShowsInput>
}

export type ChannelUpsertWithoutChannelShowsInput = {
  update: Prisma.XOR<Prisma.ChannelUpdateWithoutChannelShowsInput, Prisma.ChannelUncheckedUpdateWithoutChannelShowsInput>
  create: Prisma.XOR<Prisma.ChannelCreateWithoutChannelShowsInput, Prisma.ChannelUncheckedCreateWithoutChannelShowsInput>
  where?: Prisma.ChannelWhereInput
}

export type ChannelUpdateToOneWithWhereWithoutChannelShowsInput = {
  where?: Prisma.ChannelWhereInput
  data: Prisma.XOR<Prisma.ChannelUpdateWithoutChannelShowsInput, Prisma.ChannelUncheckedUpdateWithoutChannelShowsInput>
}

export type ChannelUpdateWithoutChannelShowsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programs?: Prisma.ProgramUpdateManyWithoutChannelNestedInput
  channelMovies?: Prisma.ChannelMovieUpdateManyWithoutChannelNestedInput
}

export type ChannelUncheckedUpdateWithoutChannelShowsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutChannelNestedInput
  channelMovies?: Prisma.ChannelMovieUncheckedUpdateManyWithoutChannelNestedInput
}

export type ChannelCreateWithoutChannelMoviesInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  programs?: Prisma.ProgramCreateNestedManyWithoutChannelInput
  channelShows?: Prisma.ChannelShowCreateNestedManyWithoutChannelInput
}

export type ChannelUncheckedCreateWithoutChannelMoviesInput = {
  id?: string
  number: number
  name: string
  icon?: string | null
  stealth?: boolean
  groupTitle?: string | null
  startTime?: string | null
  iconWidth?: number
  iconDuration?: number
  iconPosition?: string
  guideFlexPlaceholder?: string
  guideMinimumDurationSeconds?: number
  isOnDemand?: boolean
  onDemandModulo?: number
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: string | null
  filterActors?: string | null
  filterDirectors?: string | null
  filterStudios?: string | null
  filterCollections?: string | null
  filterYearStart?: number | null
  filterYearEnd?: number | null
  filterRating?: string | null
  filterType?: string
  lastAutoScanAt?: Date | string | null
  defaultEpisodeOrder?: string
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: number
  autoSortMethod?: string | null
  franchiseAutomation?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  programs?: Prisma.ProgramUncheckedCreateNestedManyWithoutChannelInput
  channelShows?: Prisma.ChannelShowUncheckedCreateNestedManyWithoutChannelInput
}

export type ChannelCreateOrConnectWithoutChannelMoviesInput = {
  where: Prisma.ChannelWhereUniqueInput
  create: Prisma.XOR<Prisma.ChannelCreateWithoutChannelMoviesInput, Prisma.ChannelUncheckedCreateWithoutChannelMoviesInput>
}

export type ChannelUpsertWithoutChannelMoviesInput = {
  update: Prisma.XOR<Prisma.ChannelUpdateWithoutChannelMoviesInput, Prisma.ChannelUncheckedUpdateWithoutChannelMoviesInput>
  create: Prisma.XOR<Prisma.ChannelCreateWithoutChannelMoviesInput, Prisma.ChannelUncheckedCreateWithoutChannelMoviesInput>
  where?: Prisma.ChannelWhereInput
}

export type ChannelUpdateToOneWithWhereWithoutChannelMoviesInput = {
  where?: Prisma.ChannelWhereInput
  data: Prisma.XOR<Prisma.ChannelUpdateWithoutChannelMoviesInput, Prisma.ChannelUncheckedUpdateWithoutChannelMoviesInput>
}

export type ChannelUpdateWithoutChannelMoviesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programs?: Prisma.ProgramUpdateManyWithoutChannelNestedInput
  channelShows?: Prisma.ChannelShowUpdateManyWithoutChannelNestedInput
}

export type ChannelUncheckedUpdateWithoutChannelMoviesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  number?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  icon?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  stealth?: Prisma.BoolFieldUpdateOperationsInput | boolean
  groupTitle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  startTime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  iconWidth?: Prisma.IntFieldUpdateOperationsInput | number
  iconDuration?: Prisma.IntFieldUpdateOperationsInput | number
  iconPosition?: Prisma.StringFieldUpdateOperationsInput | string
  guideFlexPlaceholder?: Prisma.StringFieldUpdateOperationsInput | string
  guideMinimumDurationSeconds?: Prisma.IntFieldUpdateOperationsInput | number
  isOnDemand?: Prisma.BoolFieldUpdateOperationsInput | boolean
  onDemandModulo?: Prisma.IntFieldUpdateOperationsInput | number
  episodeMemoryEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoFilterEnabled?: Prisma.BoolFieldUpdateOperationsInput | boolean
  filterGenres?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterActors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterDirectors?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterStudios?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterCollections?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterYearStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterYearEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  filterRating?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  filterType?: Prisma.StringFieldUpdateOperationsInput | string
  lastAutoScanAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  defaultEpisodeOrder?: Prisma.StringFieldUpdateOperationsInput | string
  respectEpisodeOrder?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffle?: Prisma.BoolFieldUpdateOperationsInput | boolean
  blockShuffleSize?: Prisma.IntFieldUpdateOperationsInput | number
  autoSortMethod?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  franchiseAutomation?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  programs?: Prisma.ProgramUncheckedUpdateManyWithoutChannelNestedInput
  channelShows?: Prisma.ChannelShowUncheckedUpdateManyWithoutChannelNestedInput
}


/**
 * Count Type ChannelCountOutputType
 */

export type ChannelCountOutputType = {
  programs: number
  channelShows: number
  channelMovies: number
}

export type ChannelCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  programs?: boolean | ChannelCountOutputTypeCountProgramsArgs
  channelShows?: boolean | ChannelCountOutputTypeCountChannelShowsArgs
  channelMovies?: boolean | ChannelCountOutputTypeCountChannelMoviesArgs
}

/**
 * ChannelCountOutputType without action
 */
export type ChannelCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ChannelCountOutputType
   */
  select?: Prisma.ChannelCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ChannelCountOutputType without action
 */
export type ChannelCountOutputTypeCountProgramsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProgramWhereInput
}

/**
 * ChannelCountOutputType without action
 */
export type ChannelCountOutputTypeCountChannelShowsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ChannelShowWhereInput
}

/**
 * ChannelCountOutputType without action
 */
export type ChannelCountOutputTypeCountChannelMoviesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ChannelMovieWhereInput
}


export type ChannelSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  number?: boolean
  name?: boolean
  icon?: boolean
  stealth?: boolean
  groupTitle?: boolean
  startTime?: boolean
  iconWidth?: boolean
  iconDuration?: boolean
  iconPosition?: boolean
  guideFlexPlaceholder?: boolean
  guideMinimumDurationSeconds?: boolean
  isOnDemand?: boolean
  onDemandModulo?: boolean
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: boolean
  filterActors?: boolean
  filterDirectors?: boolean
  filterStudios?: boolean
  filterCollections?: boolean
  filterYearStart?: boolean
  filterYearEnd?: boolean
  filterRating?: boolean
  filterType?: boolean
  lastAutoScanAt?: boolean
  defaultEpisodeOrder?: boolean
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: boolean
  autoSortMethod?: boolean
  franchiseAutomation?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  programs?: boolean | Prisma.Channel$programsArgs<ExtArgs>
  channelShows?: boolean | Prisma.Channel$channelShowsArgs<ExtArgs>
  channelMovies?: boolean | Prisma.Channel$channelMoviesArgs<ExtArgs>
  _count?: boolean | Prisma.ChannelCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["channel"]>

export type ChannelSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  number?: boolean
  name?: boolean
  icon?: boolean
  stealth?: boolean
  groupTitle?: boolean
  startTime?: boolean
  iconWidth?: boolean
  iconDuration?: boolean
  iconPosition?: boolean
  guideFlexPlaceholder?: boolean
  guideMinimumDurationSeconds?: boolean
  isOnDemand?: boolean
  onDemandModulo?: boolean
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: boolean
  filterActors?: boolean
  filterDirectors?: boolean
  filterStudios?: boolean
  filterCollections?: boolean
  filterYearStart?: boolean
  filterYearEnd?: boolean
  filterRating?: boolean
  filterType?: boolean
  lastAutoScanAt?: boolean
  defaultEpisodeOrder?: boolean
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: boolean
  autoSortMethod?: boolean
  franchiseAutomation?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["channel"]>

export type ChannelSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  number?: boolean
  name?: boolean
  icon?: boolean
  stealth?: boolean
  groupTitle?: boolean
  startTime?: boolean
  iconWidth?: boolean
  iconDuration?: boolean
  iconPosition?: boolean
  guideFlexPlaceholder?: boolean
  guideMinimumDurationSeconds?: boolean
  isOnDemand?: boolean
  onDemandModulo?: boolean
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: boolean
  filterActors?: boolean
  filterDirectors?: boolean
  filterStudios?: boolean
  filterCollections?: boolean
  filterYearStart?: boolean
  filterYearEnd?: boolean
  filterRating?: boolean
  filterType?: boolean
  lastAutoScanAt?: boolean
  defaultEpisodeOrder?: boolean
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: boolean
  autoSortMethod?: boolean
  franchiseAutomation?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["channel"]>

export type ChannelSelectScalar = {
  id?: boolean
  number?: boolean
  name?: boolean
  icon?: boolean
  stealth?: boolean
  groupTitle?: boolean
  startTime?: boolean
  iconWidth?: boolean
  iconDuration?: boolean
  iconPosition?: boolean
  guideFlexPlaceholder?: boolean
  guideMinimumDurationSeconds?: boolean
  isOnDemand?: boolean
  onDemandModulo?: boolean
  episodeMemoryEnabled?: boolean
  autoFilterEnabled?: boolean
  filterGenres?: boolean
  filterActors?: boolean
  filterDirectors?: boolean
  filterStudios?: boolean
  filterCollections?: boolean
  filterYearStart?: boolean
  filterYearEnd?: boolean
  filterRating?: boolean
  filterType?: boolean
  lastAutoScanAt?: boolean
  defaultEpisodeOrder?: boolean
  respectEpisodeOrder?: boolean
  blockShuffle?: boolean
  blockShuffleSize?: boolean
  autoSortMethod?: boolean
  franchiseAutomation?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ChannelOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "number" | "name" | "icon" | "stealth" | "groupTitle" | "startTime" | "iconWidth" | "iconDuration" | "iconPosition" | "guideFlexPlaceholder" | "guideMinimumDurationSeconds" | "isOnDemand" | "onDemandModulo" | "episodeMemoryEnabled" | "autoFilterEnabled" | "filterGenres" | "filterActors" | "filterDirectors" | "filterStudios" | "filterCollections" | "filterYearStart" | "filterYearEnd" | "filterRating" | "filterType" | "lastAutoScanAt" | "defaultEpisodeOrder" | "respectEpisodeOrder" | "blockShuffle" | "blockShuffleSize" | "autoSortMethod" | "franchiseAutomation" | "createdAt" | "updatedAt", ExtArgs["result"]["channel"]>
export type ChannelInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  programs?: boolean | Prisma.Channel$programsArgs<ExtArgs>
  channelShows?: boolean | Prisma.Channel$channelShowsArgs<ExtArgs>
  channelMovies?: boolean | Prisma.Channel$channelMoviesArgs<ExtArgs>
  _count?: boolean | Prisma.ChannelCountOutputTypeDefaultArgs<ExtArgs>
}
export type ChannelIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ChannelIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ChannelPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Channel"
  objects: {
    programs: Prisma.$ProgramPayload<ExtArgs>[]
    channelShows: Prisma.$ChannelShowPayload<ExtArgs>[]
    channelMovies: Prisma.$ChannelMoviePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    number: number
    name: string
    icon: string | null
    stealth: boolean
    groupTitle: string | null
    startTime: string | null
    iconWidth: number
    iconDuration: number
    iconPosition: string
    guideFlexPlaceholder: string
    guideMinimumDurationSeconds: number
    isOnDemand: boolean
    onDemandModulo: number
    episodeMemoryEnabled: boolean
    autoFilterEnabled: boolean
    filterGenres: string | null
    filterActors: string | null
    filterDirectors: string | null
    filterStudios: string | null
    filterCollections: string | null
    filterYearStart: number | null
    filterYearEnd: number | null
    filterRating: string | null
    filterType: string
    lastAutoScanAt: Date | null
    defaultEpisodeOrder: string
    respectEpisodeOrder: boolean
    blockShuffle: boolean
    blockShuffleSize: number
    autoSortMethod: string | null
    franchiseAutomation: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["channel"]>
  composites: {}
}

export type ChannelGetPayload<S extends boolean | null | undefined | ChannelDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ChannelPayload, S>

export type ChannelCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ChannelFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ChannelCountAggregateInputType | true
  }

export interface ChannelDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Channel'], meta: { name: 'Channel' } }
  /**
   * Find zero or one Channel that matches the filter.
   * @param {ChannelFindUniqueArgs} args - Arguments to find a Channel
   * @example
   * // Get one Channel
   * const channel = await prisma.channel.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ChannelFindUniqueArgs>(args: Prisma.SelectSubset<T, ChannelFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ChannelClient<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Channel that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ChannelFindUniqueOrThrowArgs} args - Arguments to find a Channel
   * @example
   * // Get one Channel
   * const channel = await prisma.channel.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ChannelFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ChannelFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ChannelClient<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Channel that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ChannelFindFirstArgs} args - Arguments to find a Channel
   * @example
   * // Get one Channel
   * const channel = await prisma.channel.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ChannelFindFirstArgs>(args?: Prisma.SelectSubset<T, ChannelFindFirstArgs<ExtArgs>>): Prisma.Prisma__ChannelClient<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Channel that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ChannelFindFirstOrThrowArgs} args - Arguments to find a Channel
   * @example
   * // Get one Channel
   * const channel = await prisma.channel.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ChannelFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ChannelFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ChannelClient<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Channels that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ChannelFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Channels
   * const channels = await prisma.channel.findMany()
   * 
   * // Get first 10 Channels
   * const channels = await prisma.channel.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const channelWithIdOnly = await prisma.channel.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ChannelFindManyArgs>(args?: Prisma.SelectSubset<T, ChannelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Channel.
   * @param {ChannelCreateArgs} args - Arguments to create a Channel.
   * @example
   * // Create one Channel
   * const Channel = await prisma.channel.create({
   *   data: {
   *     // ... data to create a Channel
   *   }
   * })
   * 
   */
  create<T extends ChannelCreateArgs>(args: Prisma.SelectSubset<T, ChannelCreateArgs<ExtArgs>>): Prisma.Prisma__ChannelClient<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Channels.
   * @param {ChannelCreateManyArgs} args - Arguments to create many Channels.
   * @example
   * // Create many Channels
   * const channel = await prisma.channel.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ChannelCreateManyArgs>(args?: Prisma.SelectSubset<T, ChannelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Channels and returns the data saved in the database.
   * @param {ChannelCreateManyAndReturnArgs} args - Arguments to create many Channels.
   * @example
   * // Create many Channels
   * const channel = await prisma.channel.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Channels and only return the `id`
   * const channelWithIdOnly = await prisma.channel.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ChannelCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ChannelCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Channel.
   * @param {ChannelDeleteArgs} args - Arguments to delete one Channel.
   * @example
   * // Delete one Channel
   * const Channel = await prisma.channel.delete({
   *   where: {
   *     // ... filter to delete one Channel
   *   }
   * })
   * 
   */
  delete<T extends ChannelDeleteArgs>(args: Prisma.SelectSubset<T, ChannelDeleteArgs<ExtArgs>>): Prisma.Prisma__ChannelClient<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Channel.
   * @param {ChannelUpdateArgs} args - Arguments to update one Channel.
   * @example
   * // Update one Channel
   * const channel = await prisma.channel.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ChannelUpdateArgs>(args: Prisma.SelectSubset<T, ChannelUpdateArgs<ExtArgs>>): Prisma.Prisma__ChannelClient<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Channels.
   * @param {ChannelDeleteManyArgs} args - Arguments to filter Channels to delete.
   * @example
   * // Delete a few Channels
   * const { count } = await prisma.channel.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ChannelDeleteManyArgs>(args?: Prisma.SelectSubset<T, ChannelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Channels.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ChannelUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Channels
   * const channel = await prisma.channel.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ChannelUpdateManyArgs>(args: Prisma.SelectSubset<T, ChannelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Channels and returns the data updated in the database.
   * @param {ChannelUpdateManyAndReturnArgs} args - Arguments to update many Channels.
   * @example
   * // Update many Channels
   * const channel = await prisma.channel.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Channels and only return the `id`
   * const channelWithIdOnly = await prisma.channel.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ChannelUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ChannelUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Channel.
   * @param {ChannelUpsertArgs} args - Arguments to update or create a Channel.
   * @example
   * // Update or create a Channel
   * const channel = await prisma.channel.upsert({
   *   create: {
   *     // ... data to create a Channel
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Channel we want to update
   *   }
   * })
   */
  upsert<T extends ChannelUpsertArgs>(args: Prisma.SelectSubset<T, ChannelUpsertArgs<ExtArgs>>): Prisma.Prisma__ChannelClient<runtime.Types.Result.GetResult<Prisma.$ChannelPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Channels.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ChannelCountArgs} args - Arguments to filter Channels to count.
   * @example
   * // Count the number of Channels
   * const count = await prisma.channel.count({
   *   where: {
   *     // ... the filter for the Channels we want to count
   *   }
   * })
  **/
  count<T extends ChannelCountArgs>(
    args?: Prisma.Subset<T, ChannelCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ChannelCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Channel.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ChannelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ChannelAggregateArgs>(args: Prisma.Subset<T, ChannelAggregateArgs>): Prisma.PrismaPromise<GetChannelAggregateType<T>>

  /**
   * Group by Channel.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ChannelGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ChannelGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ChannelGroupByArgs['orderBy'] }
      : { orderBy?: ChannelGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ChannelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChannelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Channel model
 */
readonly fields: ChannelFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Channel.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ChannelClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  programs<T extends Prisma.Channel$programsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Channel$programsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  channelShows<T extends Prisma.Channel$channelShowsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Channel$channelShowsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ChannelShowPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  channelMovies<T extends Prisma.Channel$channelMoviesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Channel$channelMoviesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ChannelMoviePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Channel model
 */
export interface ChannelFieldRefs {
  readonly id: Prisma.FieldRef<"Channel", 'String'>
  readonly number: Prisma.FieldRef<"Channel", 'Int'>
  readonly name: Prisma.FieldRef<"Channel", 'String'>
  readonly icon: Prisma.FieldRef<"Channel", 'String'>
  readonly stealth: Prisma.FieldRef<"Channel", 'Boolean'>
  readonly groupTitle: Prisma.FieldRef<"Channel", 'String'>
  readonly startTime: Prisma.FieldRef<"Channel", 'String'>
  readonly iconWidth: Prisma.FieldRef<"Channel", 'Int'>
  readonly iconDuration: Prisma.FieldRef<"Channel", 'Int'>
  readonly iconPosition: Prisma.FieldRef<"Channel", 'String'>
  readonly guideFlexPlaceholder: Prisma.FieldRef<"Channel", 'String'>
  readonly guideMinimumDurationSeconds: Prisma.FieldRef<"Channel", 'Int'>
  readonly isOnDemand: Prisma.FieldRef<"Channel", 'Boolean'>
  readonly onDemandModulo: Prisma.FieldRef<"Channel", 'Int'>
  readonly episodeMemoryEnabled: Prisma.FieldRef<"Channel", 'Boolean'>
  readonly autoFilterEnabled: Prisma.FieldRef<"Channel", 'Boolean'>
  readonly filterGenres: Prisma.FieldRef<"Channel", 'String'>
  readonly filterActors: Prisma.FieldRef<"Channel", 'String'>
  readonly filterDirectors: Prisma.FieldRef<"Channel", 'String'>
  readonly filterStudios: Prisma.FieldRef<"Channel", 'String'>
  readonly filterCollections: Prisma.FieldRef<"Channel", 'String'>
  readonly filterYearStart: Prisma.FieldRef<"Channel", 'Int'>
  readonly filterYearEnd: Prisma.FieldRef<"Channel", 'Int'>
  readonly filterRating: Prisma.FieldRef<"Channel", 'String'>
  readonly filterType: Prisma.FieldRef<"Channel", 'String'>
  readonly lastAutoScanAt: Prisma.FieldRef<"Channel", 'DateTime'>
  readonly defaultEpisodeOrder: Prisma.FieldRef<"Channel", 'String'>
  readonly respectEpisodeOrder: Prisma.FieldRef<"Channel", 'Boolean'>
  readonly blockShuffle: Prisma.FieldRef<"Channel", 'Boolean'>
  readonly blockShuffleSize: Prisma.FieldRef<"Channel", 'Int'>
  readonly autoSortMethod: Prisma.FieldRef<"Channel", 'String'>
  readonly franchiseAutomation: Prisma.FieldRef<"Channel", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Channel", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Channel", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Channel findUnique
 */
export type ChannelFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * Filter, which Channel to fetch.
   */
  where: Prisma.ChannelWhereUniqueInput
}

/**
 * Channel findUniqueOrThrow
 */
export type ChannelFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * Filter, which Channel to fetch.
   */
  where: Prisma.ChannelWhereUniqueInput
}

/**
 * Channel findFirst
 */
export type ChannelFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * Filter, which Channel to fetch.
   */
  where?: Prisma.ChannelWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Channels to fetch.
   */
  orderBy?: Prisma.ChannelOrderByWithRelationInput | Prisma.ChannelOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Channels.
   */
  cursor?: Prisma.ChannelWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Channels from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Channels.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Channels.
   */
  distinct?: Prisma.ChannelScalarFieldEnum | Prisma.ChannelScalarFieldEnum[]
}

/**
 * Channel findFirstOrThrow
 */
export type ChannelFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * Filter, which Channel to fetch.
   */
  where?: Prisma.ChannelWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Channels to fetch.
   */
  orderBy?: Prisma.ChannelOrderByWithRelationInput | Prisma.ChannelOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Channels.
   */
  cursor?: Prisma.ChannelWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Channels from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Channels.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Channels.
   */
  distinct?: Prisma.ChannelScalarFieldEnum | Prisma.ChannelScalarFieldEnum[]
}

/**
 * Channel findMany
 */
export type ChannelFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * Filter, which Channels to fetch.
   */
  where?: Prisma.ChannelWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Channels to fetch.
   */
  orderBy?: Prisma.ChannelOrderByWithRelationInput | Prisma.ChannelOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Channels.
   */
  cursor?: Prisma.ChannelWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Channels from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Channels.
   */
  skip?: number
  distinct?: Prisma.ChannelScalarFieldEnum | Prisma.ChannelScalarFieldEnum[]
}

/**
 * Channel create
 */
export type ChannelCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * The data needed to create a Channel.
   */
  data: Prisma.XOR<Prisma.ChannelCreateInput, Prisma.ChannelUncheckedCreateInput>
}

/**
 * Channel createMany
 */
export type ChannelCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Channels.
   */
  data: Prisma.ChannelCreateManyInput | Prisma.ChannelCreateManyInput[]
}

/**
 * Channel createManyAndReturn
 */
export type ChannelCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * The data used to create many Channels.
   */
  data: Prisma.ChannelCreateManyInput | Prisma.ChannelCreateManyInput[]
}

/**
 * Channel update
 */
export type ChannelUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * The data needed to update a Channel.
   */
  data: Prisma.XOR<Prisma.ChannelUpdateInput, Prisma.ChannelUncheckedUpdateInput>
  /**
   * Choose, which Channel to update.
   */
  where: Prisma.ChannelWhereUniqueInput
}

/**
 * Channel updateMany
 */
export type ChannelUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Channels.
   */
  data: Prisma.XOR<Prisma.ChannelUpdateManyMutationInput, Prisma.ChannelUncheckedUpdateManyInput>
  /**
   * Filter which Channels to update
   */
  where?: Prisma.ChannelWhereInput
  /**
   * Limit how many Channels to update.
   */
  limit?: number
}

/**
 * Channel updateManyAndReturn
 */
export type ChannelUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * The data used to update Channels.
   */
  data: Prisma.XOR<Prisma.ChannelUpdateManyMutationInput, Prisma.ChannelUncheckedUpdateManyInput>
  /**
   * Filter which Channels to update
   */
  where?: Prisma.ChannelWhereInput
  /**
   * Limit how many Channels to update.
   */
  limit?: number
}

/**
 * Channel upsert
 */
export type ChannelUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * The filter to search for the Channel to update in case it exists.
   */
  where: Prisma.ChannelWhereUniqueInput
  /**
   * In case the Channel found by the `where` argument doesn't exist, create a new Channel with this data.
   */
  create: Prisma.XOR<Prisma.ChannelCreateInput, Prisma.ChannelUncheckedCreateInput>
  /**
   * In case the Channel was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ChannelUpdateInput, Prisma.ChannelUncheckedUpdateInput>
}

/**
 * Channel delete
 */
export type ChannelDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
  /**
   * Filter which Channel to delete.
   */
  where: Prisma.ChannelWhereUniqueInput
}

/**
 * Channel deleteMany
 */
export type ChannelDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Channels to delete
   */
  where?: Prisma.ChannelWhereInput
  /**
   * Limit how many Channels to delete.
   */
  limit?: number
}

/**
 * Channel.programs
 */
export type Channel$programsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Program
   */
  select?: Prisma.ProgramSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Program
   */
  omit?: Prisma.ProgramOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProgramInclude<ExtArgs> | null
  where?: Prisma.ProgramWhereInput
  orderBy?: Prisma.ProgramOrderByWithRelationInput | Prisma.ProgramOrderByWithRelationInput[]
  cursor?: Prisma.ProgramWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProgramScalarFieldEnum | Prisma.ProgramScalarFieldEnum[]
}

/**
 * Channel.channelShows
 */
export type Channel$channelShowsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ChannelShow
   */
  select?: Prisma.ChannelShowSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ChannelShow
   */
  omit?: Prisma.ChannelShowOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelShowInclude<ExtArgs> | null
  where?: Prisma.ChannelShowWhereInput
  orderBy?: Prisma.ChannelShowOrderByWithRelationInput | Prisma.ChannelShowOrderByWithRelationInput[]
  cursor?: Prisma.ChannelShowWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ChannelShowScalarFieldEnum | Prisma.ChannelShowScalarFieldEnum[]
}

/**
 * Channel.channelMovies
 */
export type Channel$channelMoviesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ChannelMovie
   */
  select?: Prisma.ChannelMovieSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ChannelMovie
   */
  omit?: Prisma.ChannelMovieOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelMovieInclude<ExtArgs> | null
  where?: Prisma.ChannelMovieWhereInput
  orderBy?: Prisma.ChannelMovieOrderByWithRelationInput | Prisma.ChannelMovieOrderByWithRelationInput[]
  cursor?: Prisma.ChannelMovieWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ChannelMovieScalarFieldEnum | Prisma.ChannelMovieScalarFieldEnum[]
}

/**
 * Channel without action
 */
export type ChannelDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Channel
   */
  select?: Prisma.ChannelSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Channel
   */
  omit?: Prisma.ChannelOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChannelInclude<ExtArgs> | null
}
