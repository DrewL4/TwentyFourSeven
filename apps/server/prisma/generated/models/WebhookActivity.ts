
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `WebhookActivity` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model WebhookActivity
 * 
 */
export type WebhookActivityModel = runtime.Types.Result.DefaultSelection<Prisma.$WebhookActivityPayload>

export type AggregateWebhookActivity = {
  _count: WebhookActivityCountAggregateOutputType | null
  _min: WebhookActivityMinAggregateOutputType | null
  _max: WebhookActivityMaxAggregateOutputType | null
}

export type WebhookActivityMinAggregateOutputType = {
  id: string | null
  source: string | null
  serverName: string | null
  serverId: string | null
  eventType: string | null
  contentType: string | null
  contentTitle: string | null
  contentId: string | null
  status: string | null
  errorMessage: string | null
  payload: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WebhookActivityMaxAggregateOutputType = {
  id: string | null
  source: string | null
  serverName: string | null
  serverId: string | null
  eventType: string | null
  contentType: string | null
  contentTitle: string | null
  contentId: string | null
  status: string | null
  errorMessage: string | null
  payload: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WebhookActivityCountAggregateOutputType = {
  id: number
  source: number
  serverName: number
  serverId: number
  eventType: number
  contentType: number
  contentTitle: number
  contentId: number
  status: number
  errorMessage: number
  payload: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type WebhookActivityMinAggregateInputType = {
  id?: true
  source?: true
  serverName?: true
  serverId?: true
  eventType?: true
  contentType?: true
  contentTitle?: true
  contentId?: true
  status?: true
  errorMessage?: true
  payload?: true
  createdAt?: true
  updatedAt?: true
}

export type WebhookActivityMaxAggregateInputType = {
  id?: true
  source?: true
  serverName?: true
  serverId?: true
  eventType?: true
  contentType?: true
  contentTitle?: true
  contentId?: true
  status?: true
  errorMessage?: true
  payload?: true
  createdAt?: true
  updatedAt?: true
}

export type WebhookActivityCountAggregateInputType = {
  id?: true
  source?: true
  serverName?: true
  serverId?: true
  eventType?: true
  contentType?: true
  contentTitle?: true
  contentId?: true
  status?: true
  errorMessage?: true
  payload?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type WebhookActivityAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WebhookActivity to aggregate.
   */
  where?: Prisma.WebhookActivityWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebhookActivities to fetch.
   */
  orderBy?: Prisma.WebhookActivityOrderByWithRelationInput | Prisma.WebhookActivityOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.WebhookActivityWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebhookActivities from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebhookActivities.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned WebhookActivities
  **/
  _count?: true | WebhookActivityCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: WebhookActivityMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: WebhookActivityMaxAggregateInputType
}

export type GetWebhookActivityAggregateType<T extends WebhookActivityAggregateArgs> = {
      [P in keyof T & keyof AggregateWebhookActivity]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWebhookActivity[P]>
    : Prisma.GetScalarType<T[P], AggregateWebhookActivity[P]>
}




export type WebhookActivityGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WebhookActivityWhereInput
  orderBy?: Prisma.WebhookActivityOrderByWithAggregationInput | Prisma.WebhookActivityOrderByWithAggregationInput[]
  by: Prisma.WebhookActivityScalarFieldEnum[] | Prisma.WebhookActivityScalarFieldEnum
  having?: Prisma.WebhookActivityScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: WebhookActivityCountAggregateInputType | true
  _min?: WebhookActivityMinAggregateInputType
  _max?: WebhookActivityMaxAggregateInputType
}

export type WebhookActivityGroupByOutputType = {
  id: string
  source: string
  serverName: string
  serverId: string | null
  eventType: string
  contentType: string
  contentTitle: string
  contentId: string | null
  status: string
  errorMessage: string | null
  payload: string | null
  createdAt: Date
  updatedAt: Date
  _count: WebhookActivityCountAggregateOutputType | null
  _min: WebhookActivityMinAggregateOutputType | null
  _max: WebhookActivityMaxAggregateOutputType | null
}

type GetWebhookActivityGroupByPayload<T extends WebhookActivityGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WebhookActivityGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof WebhookActivityGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WebhookActivityGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WebhookActivityGroupByOutputType[P]>
      }
    >
  > 



export type WebhookActivityWhereInput = {
  AND?: Prisma.WebhookActivityWhereInput | Prisma.WebhookActivityWhereInput[]
  OR?: Prisma.WebhookActivityWhereInput[]
  NOT?: Prisma.WebhookActivityWhereInput | Prisma.WebhookActivityWhereInput[]
  id?: Prisma.StringFilter<"WebhookActivity"> | string
  source?: Prisma.StringFilter<"WebhookActivity"> | string
  serverName?: Prisma.StringFilter<"WebhookActivity"> | string
  serverId?: Prisma.StringNullableFilter<"WebhookActivity"> | string | null
  eventType?: Prisma.StringFilter<"WebhookActivity"> | string
  contentType?: Prisma.StringFilter<"WebhookActivity"> | string
  contentTitle?: Prisma.StringFilter<"WebhookActivity"> | string
  contentId?: Prisma.StringNullableFilter<"WebhookActivity"> | string | null
  status?: Prisma.StringFilter<"WebhookActivity"> | string
  errorMessage?: Prisma.StringNullableFilter<"WebhookActivity"> | string | null
  payload?: Prisma.StringNullableFilter<"WebhookActivity"> | string | null
  createdAt?: Prisma.DateTimeFilter<"WebhookActivity"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WebhookActivity"> | Date | string
}

export type WebhookActivityOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  source?: Prisma.SortOrder
  serverName?: Prisma.SortOrder
  serverId?: Prisma.SortOrderInput | Prisma.SortOrder
  eventType?: Prisma.SortOrder
  contentType?: Prisma.SortOrder
  contentTitle?: Prisma.SortOrder
  contentId?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrderInput | Prisma.SortOrder
  payload?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebhookActivityWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.WebhookActivityWhereInput | Prisma.WebhookActivityWhereInput[]
  OR?: Prisma.WebhookActivityWhereInput[]
  NOT?: Prisma.WebhookActivityWhereInput | Prisma.WebhookActivityWhereInput[]
  source?: Prisma.StringFilter<"WebhookActivity"> | string
  serverName?: Prisma.StringFilter<"WebhookActivity"> | string
  serverId?: Prisma.StringNullableFilter<"WebhookActivity"> | string | null
  eventType?: Prisma.StringFilter<"WebhookActivity"> | string
  contentType?: Prisma.StringFilter<"WebhookActivity"> | string
  contentTitle?: Prisma.StringFilter<"WebhookActivity"> | string
  contentId?: Prisma.StringNullableFilter<"WebhookActivity"> | string | null
  status?: Prisma.StringFilter<"WebhookActivity"> | string
  errorMessage?: Prisma.StringNullableFilter<"WebhookActivity"> | string | null
  payload?: Prisma.StringNullableFilter<"WebhookActivity"> | string | null
  createdAt?: Prisma.DateTimeFilter<"WebhookActivity"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WebhookActivity"> | Date | string
}, "id">

export type WebhookActivityOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  source?: Prisma.SortOrder
  serverName?: Prisma.SortOrder
  serverId?: Prisma.SortOrderInput | Prisma.SortOrder
  eventType?: Prisma.SortOrder
  contentType?: Prisma.SortOrder
  contentTitle?: Prisma.SortOrder
  contentId?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrderInput | Prisma.SortOrder
  payload?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.WebhookActivityCountOrderByAggregateInput
  _max?: Prisma.WebhookActivityMaxOrderByAggregateInput
  _min?: Prisma.WebhookActivityMinOrderByAggregateInput
}

export type WebhookActivityScalarWhereWithAggregatesInput = {
  AND?: Prisma.WebhookActivityScalarWhereWithAggregatesInput | Prisma.WebhookActivityScalarWhereWithAggregatesInput[]
  OR?: Prisma.WebhookActivityScalarWhereWithAggregatesInput[]
  NOT?: Prisma.WebhookActivityScalarWhereWithAggregatesInput | Prisma.WebhookActivityScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"WebhookActivity"> | string
  source?: Prisma.StringWithAggregatesFilter<"WebhookActivity"> | string
  serverName?: Prisma.StringWithAggregatesFilter<"WebhookActivity"> | string
  serverId?: Prisma.StringNullableWithAggregatesFilter<"WebhookActivity"> | string | null
  eventType?: Prisma.StringWithAggregatesFilter<"WebhookActivity"> | string
  contentType?: Prisma.StringWithAggregatesFilter<"WebhookActivity"> | string
  contentTitle?: Prisma.StringWithAggregatesFilter<"WebhookActivity"> | string
  contentId?: Prisma.StringNullableWithAggregatesFilter<"WebhookActivity"> | string | null
  status?: Prisma.StringWithAggregatesFilter<"WebhookActivity"> | string
  errorMessage?: Prisma.StringNullableWithAggregatesFilter<"WebhookActivity"> | string | null
  payload?: Prisma.StringNullableWithAggregatesFilter<"WebhookActivity"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"WebhookActivity"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"WebhookActivity"> | Date | string
}

export type WebhookActivityCreateInput = {
  id?: string
  source: string
  serverName: string
  serverId?: string | null
  eventType: string
  contentType: string
  contentTitle: string
  contentId?: string | null
  status?: string
  errorMessage?: string | null
  payload?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebhookActivityUncheckedCreateInput = {
  id?: string
  source: string
  serverName: string
  serverId?: string | null
  eventType: string
  contentType: string
  contentTitle: string
  contentId?: string | null
  status?: string
  errorMessage?: string | null
  payload?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebhookActivityUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.StringFieldUpdateOperationsInput | string
  serverName?: Prisma.StringFieldUpdateOperationsInput | string
  serverId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eventType?: Prisma.StringFieldUpdateOperationsInput | string
  contentType?: Prisma.StringFieldUpdateOperationsInput | string
  contentTitle?: Prisma.StringFieldUpdateOperationsInput | string
  contentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payload?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebhookActivityUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.StringFieldUpdateOperationsInput | string
  serverName?: Prisma.StringFieldUpdateOperationsInput | string
  serverId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eventType?: Prisma.StringFieldUpdateOperationsInput | string
  contentType?: Prisma.StringFieldUpdateOperationsInput | string
  contentTitle?: Prisma.StringFieldUpdateOperationsInput | string
  contentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payload?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebhookActivityCreateManyInput = {
  id?: string
  source: string
  serverName: string
  serverId?: string | null
  eventType: string
  contentType: string
  contentTitle: string
  contentId?: string | null
  status?: string
  errorMessage?: string | null
  payload?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebhookActivityUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.StringFieldUpdateOperationsInput | string
  serverName?: Prisma.StringFieldUpdateOperationsInput | string
  serverId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eventType?: Prisma.StringFieldUpdateOperationsInput | string
  contentType?: Prisma.StringFieldUpdateOperationsInput | string
  contentTitle?: Prisma.StringFieldUpdateOperationsInput | string
  contentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payload?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebhookActivityUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  source?: Prisma.StringFieldUpdateOperationsInput | string
  serverName?: Prisma.StringFieldUpdateOperationsInput | string
  serverId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eventType?: Prisma.StringFieldUpdateOperationsInput | string
  contentType?: Prisma.StringFieldUpdateOperationsInput | string
  contentTitle?: Prisma.StringFieldUpdateOperationsInput | string
  contentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  status?: Prisma.StringFieldUpdateOperationsInput | string
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payload?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebhookActivityCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  source?: Prisma.SortOrder
  serverName?: Prisma.SortOrder
  serverId?: Prisma.SortOrder
  eventType?: Prisma.SortOrder
  contentType?: Prisma.SortOrder
  contentTitle?: Prisma.SortOrder
  contentId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  payload?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebhookActivityMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  source?: Prisma.SortOrder
  serverName?: Prisma.SortOrder
  serverId?: Prisma.SortOrder
  eventType?: Prisma.SortOrder
  contentType?: Prisma.SortOrder
  contentTitle?: Prisma.SortOrder
  contentId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  payload?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebhookActivityMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  source?: Prisma.SortOrder
  serverName?: Prisma.SortOrder
  serverId?: Prisma.SortOrder
  eventType?: Prisma.SortOrder
  contentType?: Prisma.SortOrder
  contentTitle?: Prisma.SortOrder
  contentId?: Prisma.SortOrder
  status?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  payload?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}



export type WebhookActivitySelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  source?: boolean
  serverName?: boolean
  serverId?: boolean
  eventType?: boolean
  contentType?: boolean
  contentTitle?: boolean
  contentId?: boolean
  status?: boolean
  errorMessage?: boolean
  payload?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["webhookActivity"]>

export type WebhookActivitySelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  source?: boolean
  serverName?: boolean
  serverId?: boolean
  eventType?: boolean
  contentType?: boolean
  contentTitle?: boolean
  contentId?: boolean
  status?: boolean
  errorMessage?: boolean
  payload?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["webhookActivity"]>

export type WebhookActivitySelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  source?: boolean
  serverName?: boolean
  serverId?: boolean
  eventType?: boolean
  contentType?: boolean
  contentTitle?: boolean
  contentId?: boolean
  status?: boolean
  errorMessage?: boolean
  payload?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["webhookActivity"]>

export type WebhookActivitySelectScalar = {
  id?: boolean
  source?: boolean
  serverName?: boolean
  serverId?: boolean
  eventType?: boolean
  contentType?: boolean
  contentTitle?: boolean
  contentId?: boolean
  status?: boolean
  errorMessage?: boolean
  payload?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type WebhookActivityOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "source" | "serverName" | "serverId" | "eventType" | "contentType" | "contentTitle" | "contentId" | "status" | "errorMessage" | "payload" | "createdAt" | "updatedAt", ExtArgs["result"]["webhookActivity"]>

export type $WebhookActivityPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "WebhookActivity"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    source: string
    serverName: string
    serverId: string | null
    eventType: string
    contentType: string
    contentTitle: string
    contentId: string | null
    status: string
    errorMessage: string | null
    payload: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["webhookActivity"]>
  composites: {}
}

export type WebhookActivityGetPayload<S extends boolean | null | undefined | WebhookActivityDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload, S>

export type WebhookActivityCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<WebhookActivityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: WebhookActivityCountAggregateInputType | true
  }

export interface WebhookActivityDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WebhookActivity'], meta: { name: 'WebhookActivity' } }
  /**
   * Find zero or one WebhookActivity that matches the filter.
   * @param {WebhookActivityFindUniqueArgs} args - Arguments to find a WebhookActivity
   * @example
   * // Get one WebhookActivity
   * const webhookActivity = await prisma.webhookActivity.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WebhookActivityFindUniqueArgs>(args: Prisma.SelectSubset<T, WebhookActivityFindUniqueArgs<ExtArgs>>): Prisma.Prisma__WebhookActivityClient<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one WebhookActivity that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WebhookActivityFindUniqueOrThrowArgs} args - Arguments to find a WebhookActivity
   * @example
   * // Get one WebhookActivity
   * const webhookActivity = await prisma.webhookActivity.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WebhookActivityFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, WebhookActivityFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__WebhookActivityClient<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WebhookActivity that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookActivityFindFirstArgs} args - Arguments to find a WebhookActivity
   * @example
   * // Get one WebhookActivity
   * const webhookActivity = await prisma.webhookActivity.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WebhookActivityFindFirstArgs>(args?: Prisma.SelectSubset<T, WebhookActivityFindFirstArgs<ExtArgs>>): Prisma.Prisma__WebhookActivityClient<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WebhookActivity that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookActivityFindFirstOrThrowArgs} args - Arguments to find a WebhookActivity
   * @example
   * // Get one WebhookActivity
   * const webhookActivity = await prisma.webhookActivity.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WebhookActivityFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, WebhookActivityFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__WebhookActivityClient<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more WebhookActivities that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookActivityFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WebhookActivities
   * const webhookActivities = await prisma.webhookActivity.findMany()
   * 
   * // Get first 10 WebhookActivities
   * const webhookActivities = await prisma.webhookActivity.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const webhookActivityWithIdOnly = await prisma.webhookActivity.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends WebhookActivityFindManyArgs>(args?: Prisma.SelectSubset<T, WebhookActivityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a WebhookActivity.
   * @param {WebhookActivityCreateArgs} args - Arguments to create a WebhookActivity.
   * @example
   * // Create one WebhookActivity
   * const WebhookActivity = await prisma.webhookActivity.create({
   *   data: {
   *     // ... data to create a WebhookActivity
   *   }
   * })
   * 
   */
  create<T extends WebhookActivityCreateArgs>(args: Prisma.SelectSubset<T, WebhookActivityCreateArgs<ExtArgs>>): Prisma.Prisma__WebhookActivityClient<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many WebhookActivities.
   * @param {WebhookActivityCreateManyArgs} args - Arguments to create many WebhookActivities.
   * @example
   * // Create many WebhookActivities
   * const webhookActivity = await prisma.webhookActivity.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends WebhookActivityCreateManyArgs>(args?: Prisma.SelectSubset<T, WebhookActivityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many WebhookActivities and returns the data saved in the database.
   * @param {WebhookActivityCreateManyAndReturnArgs} args - Arguments to create many WebhookActivities.
   * @example
   * // Create many WebhookActivities
   * const webhookActivity = await prisma.webhookActivity.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many WebhookActivities and only return the `id`
   * const webhookActivityWithIdOnly = await prisma.webhookActivity.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends WebhookActivityCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, WebhookActivityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a WebhookActivity.
   * @param {WebhookActivityDeleteArgs} args - Arguments to delete one WebhookActivity.
   * @example
   * // Delete one WebhookActivity
   * const WebhookActivity = await prisma.webhookActivity.delete({
   *   where: {
   *     // ... filter to delete one WebhookActivity
   *   }
   * })
   * 
   */
  delete<T extends WebhookActivityDeleteArgs>(args: Prisma.SelectSubset<T, WebhookActivityDeleteArgs<ExtArgs>>): Prisma.Prisma__WebhookActivityClient<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one WebhookActivity.
   * @param {WebhookActivityUpdateArgs} args - Arguments to update one WebhookActivity.
   * @example
   * // Update one WebhookActivity
   * const webhookActivity = await prisma.webhookActivity.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends WebhookActivityUpdateArgs>(args: Prisma.SelectSubset<T, WebhookActivityUpdateArgs<ExtArgs>>): Prisma.Prisma__WebhookActivityClient<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more WebhookActivities.
   * @param {WebhookActivityDeleteManyArgs} args - Arguments to filter WebhookActivities to delete.
   * @example
   * // Delete a few WebhookActivities
   * const { count } = await prisma.webhookActivity.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends WebhookActivityDeleteManyArgs>(args?: Prisma.SelectSubset<T, WebhookActivityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WebhookActivities.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookActivityUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WebhookActivities
   * const webhookActivity = await prisma.webhookActivity.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends WebhookActivityUpdateManyArgs>(args: Prisma.SelectSubset<T, WebhookActivityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WebhookActivities and returns the data updated in the database.
   * @param {WebhookActivityUpdateManyAndReturnArgs} args - Arguments to update many WebhookActivities.
   * @example
   * // Update many WebhookActivities
   * const webhookActivity = await prisma.webhookActivity.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more WebhookActivities and only return the `id`
   * const webhookActivityWithIdOnly = await prisma.webhookActivity.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends WebhookActivityUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, WebhookActivityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one WebhookActivity.
   * @param {WebhookActivityUpsertArgs} args - Arguments to update or create a WebhookActivity.
   * @example
   * // Update or create a WebhookActivity
   * const webhookActivity = await prisma.webhookActivity.upsert({
   *   create: {
   *     // ... data to create a WebhookActivity
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WebhookActivity we want to update
   *   }
   * })
   */
  upsert<T extends WebhookActivityUpsertArgs>(args: Prisma.SelectSubset<T, WebhookActivityUpsertArgs<ExtArgs>>): Prisma.Prisma__WebhookActivityClient<runtime.Types.Result.GetResult<Prisma.$WebhookActivityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of WebhookActivities.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookActivityCountArgs} args - Arguments to filter WebhookActivities to count.
   * @example
   * // Count the number of WebhookActivities
   * const count = await prisma.webhookActivity.count({
   *   where: {
   *     // ... the filter for the WebhookActivities we want to count
   *   }
   * })
  **/
  count<T extends WebhookActivityCountArgs>(
    args?: Prisma.Subset<T, WebhookActivityCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WebhookActivityCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a WebhookActivity.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookActivityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends WebhookActivityAggregateArgs>(args: Prisma.Subset<T, WebhookActivityAggregateArgs>): Prisma.PrismaPromise<GetWebhookActivityAggregateType<T>>

  /**
   * Group by WebhookActivity.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookActivityGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends WebhookActivityGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WebhookActivityGroupByArgs['orderBy'] }
      : { orderBy?: WebhookActivityGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, WebhookActivityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWebhookActivityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the WebhookActivity model
 */
readonly fields: WebhookActivityFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WebhookActivity.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WebhookActivityClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the WebhookActivity model
 */
export interface WebhookActivityFieldRefs {
  readonly id: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly source: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly serverName: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly serverId: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly eventType: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly contentType: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly contentTitle: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly contentId: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly status: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly errorMessage: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly payload: Prisma.FieldRef<"WebhookActivity", 'String'>
  readonly createdAt: Prisma.FieldRef<"WebhookActivity", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"WebhookActivity", 'DateTime'>
}
    

// Custom InputTypes
/**
 * WebhookActivity findUnique
 */
export type WebhookActivityFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * Filter, which WebhookActivity to fetch.
   */
  where: Prisma.WebhookActivityWhereUniqueInput
}

/**
 * WebhookActivity findUniqueOrThrow
 */
export type WebhookActivityFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * Filter, which WebhookActivity to fetch.
   */
  where: Prisma.WebhookActivityWhereUniqueInput
}

/**
 * WebhookActivity findFirst
 */
export type WebhookActivityFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * Filter, which WebhookActivity to fetch.
   */
  where?: Prisma.WebhookActivityWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebhookActivities to fetch.
   */
  orderBy?: Prisma.WebhookActivityOrderByWithRelationInput | Prisma.WebhookActivityOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WebhookActivities.
   */
  cursor?: Prisma.WebhookActivityWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebhookActivities from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebhookActivities.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WebhookActivities.
   */
  distinct?: Prisma.WebhookActivityScalarFieldEnum | Prisma.WebhookActivityScalarFieldEnum[]
}

/**
 * WebhookActivity findFirstOrThrow
 */
export type WebhookActivityFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * Filter, which WebhookActivity to fetch.
   */
  where?: Prisma.WebhookActivityWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebhookActivities to fetch.
   */
  orderBy?: Prisma.WebhookActivityOrderByWithRelationInput | Prisma.WebhookActivityOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WebhookActivities.
   */
  cursor?: Prisma.WebhookActivityWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebhookActivities from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebhookActivities.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WebhookActivities.
   */
  distinct?: Prisma.WebhookActivityScalarFieldEnum | Prisma.WebhookActivityScalarFieldEnum[]
}

/**
 * WebhookActivity findMany
 */
export type WebhookActivityFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * Filter, which WebhookActivities to fetch.
   */
  where?: Prisma.WebhookActivityWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebhookActivities to fetch.
   */
  orderBy?: Prisma.WebhookActivityOrderByWithRelationInput | Prisma.WebhookActivityOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing WebhookActivities.
   */
  cursor?: Prisma.WebhookActivityWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebhookActivities from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebhookActivities.
   */
  skip?: number
  distinct?: Prisma.WebhookActivityScalarFieldEnum | Prisma.WebhookActivityScalarFieldEnum[]
}

/**
 * WebhookActivity create
 */
export type WebhookActivityCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * The data needed to create a WebhookActivity.
   */
  data: Prisma.XOR<Prisma.WebhookActivityCreateInput, Prisma.WebhookActivityUncheckedCreateInput>
}

/**
 * WebhookActivity createMany
 */
export type WebhookActivityCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many WebhookActivities.
   */
  data: Prisma.WebhookActivityCreateManyInput | Prisma.WebhookActivityCreateManyInput[]
}

/**
 * WebhookActivity createManyAndReturn
 */
export type WebhookActivityCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * The data used to create many WebhookActivities.
   */
  data: Prisma.WebhookActivityCreateManyInput | Prisma.WebhookActivityCreateManyInput[]
}

/**
 * WebhookActivity update
 */
export type WebhookActivityUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * The data needed to update a WebhookActivity.
   */
  data: Prisma.XOR<Prisma.WebhookActivityUpdateInput, Prisma.WebhookActivityUncheckedUpdateInput>
  /**
   * Choose, which WebhookActivity to update.
   */
  where: Prisma.WebhookActivityWhereUniqueInput
}

/**
 * WebhookActivity updateMany
 */
export type WebhookActivityUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update WebhookActivities.
   */
  data: Prisma.XOR<Prisma.WebhookActivityUpdateManyMutationInput, Prisma.WebhookActivityUncheckedUpdateManyInput>
  /**
   * Filter which WebhookActivities to update
   */
  where?: Prisma.WebhookActivityWhereInput
  /**
   * Limit how many WebhookActivities to update.
   */
  limit?: number
}

/**
 * WebhookActivity updateManyAndReturn
 */
export type WebhookActivityUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * The data used to update WebhookActivities.
   */
  data: Prisma.XOR<Prisma.WebhookActivityUpdateManyMutationInput, Prisma.WebhookActivityUncheckedUpdateManyInput>
  /**
   * Filter which WebhookActivities to update
   */
  where?: Prisma.WebhookActivityWhereInput
  /**
   * Limit how many WebhookActivities to update.
   */
  limit?: number
}

/**
 * WebhookActivity upsert
 */
export type WebhookActivityUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * The filter to search for the WebhookActivity to update in case it exists.
   */
  where: Prisma.WebhookActivityWhereUniqueInput
  /**
   * In case the WebhookActivity found by the `where` argument doesn't exist, create a new WebhookActivity with this data.
   */
  create: Prisma.XOR<Prisma.WebhookActivityCreateInput, Prisma.WebhookActivityUncheckedCreateInput>
  /**
   * In case the WebhookActivity was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WebhookActivityUpdateInput, Prisma.WebhookActivityUncheckedUpdateInput>
}

/**
 * WebhookActivity delete
 */
export type WebhookActivityDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
  /**
   * Filter which WebhookActivity to delete.
   */
  where: Prisma.WebhookActivityWhereUniqueInput
}

/**
 * WebhookActivity deleteMany
 */
export type WebhookActivityDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WebhookActivities to delete
   */
  where?: Prisma.WebhookActivityWhereInput
  /**
   * Limit how many WebhookActivities to delete.
   */
  limit?: number
}

/**
 * WebhookActivity without action
 */
export type WebhookActivityDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookActivity
   */
  select?: Prisma.WebhookActivitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookActivity
   */
  omit?: Prisma.WebhookActivityOmit<ExtArgs> | null
}
