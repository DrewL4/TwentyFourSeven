model User {
  id                    String    @id @map("_id")
  name                  String
  email                 String
  emailVerified         Boolean
  image                 String?
  password              String?   // For local users
  role                  String    @default("USER") // USER, ADMIN
  isActive              Boolean   @default(true)
  createdAt             DateTime
  updatedAt             DateTime
  
  // WatchTower Integration Fields
  watchTowerUserId      String?   @unique
  watchTowerUsername    String?
  watchTowerMetadata    Json?     // Store additional WatchTower data
  watchTowerJoinDate    DateTime? // Original join date from WatchTower
  
  sessions              Session[]
  accounts              Account[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id @map("_id")
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @map("_id")
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id @map("_id")
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
